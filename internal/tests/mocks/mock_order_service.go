// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Gerfey/gophermart/internal/service (interfaces: OrderService)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	model "github.com/Gerfey/gophermart/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderService is a mock of OrderService interface.
type MockOrderService struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceMockRecorder
}

// MockOrderServiceMockRecorder is the mock recorder for MockOrderService.
type MockOrderServiceMockRecorder struct {
	mock *MockOrderService
}

// NewMockOrderService creates a new mock instance.
func NewMockOrderService(ctrl *gomock.Controller) *MockOrderService {
	mock := &MockOrderService{ctrl: ctrl}
	mock.recorder = &MockOrderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderService) EXPECT() *MockOrderServiceMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockOrderService) CreateOrder(arg0 context.Context, arg1 int64, arg2 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockOrderServiceMockRecorder) CreateOrder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrderService)(nil).CreateOrder), arg0, arg1, arg2)
}

// GetOrdersByUserID mocks base method.
func (m *MockOrderService) GetOrdersByUserID(arg0 context.Context, arg1 int64) ([]model.OrderResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrdersByUserID", arg0, arg1)
	ret0, _ := ret[0].([]model.OrderResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrdersByUserID indicates an expected call of GetOrdersByUserID.
func (mr *MockOrderServiceMockRecorder) GetOrdersByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrdersByUserID", reflect.TypeOf((*MockOrderService)(nil).GetOrdersByUserID), arg0, arg1)
}

// ProcessOrdersBackground mocks base method.
func (m *MockOrderService) ProcessOrdersBackground(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessOrdersBackground", arg0)
}

// ProcessOrdersBackground indicates an expected call of ProcessOrdersBackground.
func (mr *MockOrderServiceMockRecorder) ProcessOrdersBackground(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessOrdersBackground", reflect.TypeOf((*MockOrderService)(nil).ProcessOrdersBackground), arg0)
}
